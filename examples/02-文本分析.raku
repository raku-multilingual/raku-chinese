#!/usr/bin/env raku
use lib 'lib';
use Chinese;

說 "=== 中文文本分析器 ===\n";

# 示例文本
my $文本 = "道可道，非常道。名可名，非常名。無名天地之始；有名萬物之母。
故常無欲，以觀其妙；常有欲，以觀其徼。此兩者同出而異名，同謂之玄。
玄之又玄，眾妙之門。";

說 "原始文本：";
說 $文本;
說 "\n", ("=" 重複字符串 50), "\n";

# 基本分析
my @句子 = 分割($文本, '。');
@句子 = 過濾(-> $s { 長度(修剪($s)) > 0 }, @句子);

說 "=== 基本統計 ===";
說 "句子數：", 計數(@句子);
說 "總字符數：", 長度($文本);
my $去標點 = $文本;
for <。 ； ， ： 、> -> $符號 {
    $去標點 = 替換($去標點, $符號, '');
}
說 "去除標點後：", 長度($去標點);

# 字符分析
說 "\n=== 字符分析 ===";
# 使用字符串替換方法處理中文標點
my $純文本 = $文本;
for <。 ； ， ： 、> -> $符號 {
    $純文本 = 替換($純文本, $符號, '');
}
$純文本 = 替換($純文本, /\s+/, '');
my @字符 = 字符列表($純文本);
my @唯一字符 = 唯一(@字符);
說 "唯一字符數：", 計數(@唯一字符);

# 查找重複最多的字
my %字頻 = 分組(-> $c { $c }, @字符);
my @頻率排序 = %字頻.pairs.sort({ $^b.value.elems <=> $^a.value.elems });

說 "\n=== 最常見的字（前10個）===";
對於(@頻率排序[^10], -> $配對 {
    說 "  '", $配對.key, "' : ", $配對.value.elems, " 次";
});

# 查找特定詞
說 "\n=== 查找特定詞彙 ===";
my @關鍵詞 = <道 名 玄 妙 常>;
對於(@關鍵詞, -> $詞 {
    my $出現次數 = 計數(過濾(-> $c { $c 等於 $詞 }, @字符));
    if ($出現次數 大於 0) {
        說 "詞 '$詞' 出現了 $出現次數 次";
    }
});

# 句子長度分析
說 "\n=== 句子長度分析 ===";
my @句子長度 = 映射(-> $s { 長度(修剪($s)) }, @句子);
說 "句子長度：", @句子長度;
說 "平均句子長度：", 四捨五入(平均(@句子長度));
說 "最長句子：", 最大(@句子長度), " 字";
說 "最短句子：", 最小(@句子長度), " 字";

# 保存結果
my $輸出文件 = "文本分析結果.txt";
my $文件 = 打開($輸出文件, :w);
寫行($文件, "=== 文本分析結果 ===");
寫行($文件, "日期：" 連接 日期());
寫行($文件, "總字符數：" 連接 轉字符串(長度($文本)));
寫行($文件, "唯一字符數：" 連接 轉字符串(計數(@唯一字符)));
寫行($文件, "句子數：" 連接 轉字符串(計數(@句子)));
寫行($文件, "平均句子長度：" 連接 轉字符串(四捨五入(平均(@句子長度))));
關閉($文件);

說 "\n✓ 結果已保存到：$輸出文件";

# 創建簡化版本
說 "\n=== 文本簡化 ===";
my $簡化 = 替換($文本, /[\。\；\，\：]/, ' ');
$簡化 = 替換($簡化, /\s+/, ' ');
說 "簡化版本：";
說 修剪($簡化);