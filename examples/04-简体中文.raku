#!/usr/bin/env raku
use lib 'lib';
use Chinese;

说 "=" x 50;
说 "简体中文 Raku 测试";
说 "=" x 50;

# === 基础输出测试 ===
说 "\n=== 基础输出测试 ===";
说 "你好，简体中文！";
讲 "你好，简体中文！";
输出 "这是输出函数";

# === 常量测试 ===
说 "\n=== 常量测试 ===";
说 "真：", 真;
说 "假：", 假;
说 "圆周率：", 圆周率;
说 "圆周率π：", 圆周率π;
说 "自然对数底：", 自然对数底;
说 "自然对数底数：", 自然对数底数;
说 "无限：", 无限;
说 "无穷大：", 无穷大;
说 "非数：", 非数;

# === 数学运算测试 ===
说 "\n=== 数学运算测试 ===";
说 "5 加 3 = ", (5 加 3);
说 "10 減 4 = ", (10 減 4);
说 "6 乘 7 = ", (6 乘 7);
说 "20 除 4 = ", (20 除 4);
说 "21 模 4 = ", (21 模 4);
说 "2 幂 3 = ", (2 幂 3);
说 "绝对值(-5) = ", 绝对值(-5);
说 "平方根(16) = ", 平方根(16);
说 "四舍五入(3.7) = ", 四舍五入(3.7);
说 "向下取整(4.9) = ", 向下取整(4.9);
说 "向上取整(4.1) = ", 向上取整(4.1);
说 "截断(-3.7) = ", 截断(-3.7);
说 "符号(-5) = ", 符号(-5);
说 "最大(3, 7, 2) = ", 最大(3, 7, 2);
说 "最小(3, 7, 2) = ", 最小(3, 7, 2);

# === 三角函数测试 ===
说 "\n=== 三角函数测试 ===";
说 "正弦(1) = ", 正弦(1);
说 "余弦(0) = ", 余弦(0);
说 "正切(1) = ", 正切(1);
说 "双曲正弦(1) = ", 双曲正弦(1);
说 "双曲余弦(0) = ", 双曲余弦(0);
说 "双曲正切(1) = ", 双曲正切(1);

# === 对数和指数测试 ===
说 "\n=== 对数和指数测试 ===";
说 "自然对数(2.718) = ", 自然对数(2.718);
说 "常用对数(100) = ", 常用对数(100);
说 "指数(1) = ", 指数(1);

# === 数论函数测试 ===
说 "\n=== 数论函数测试 ===";
说 "最大公约数(12, 8) = ", 最大公约数(12, 8);
说 "阶乘(5) = ", 阶乘(5);
说 "组合(5, 2) = ", 组合(5, 2);

# === 比较运算符测试 ===
说 "\n=== 比较运算符测试 ===";
说 "10 大于 5 吗？", (10 大于 5);
说 "3 小于 7 吗？", (3 小于 7);
说 "5 等于 5 吗？", (5 等于 5);
说 "5 不等于 3 吗？", (5 不等于 3);
说 "8 大于等于 8 吗？", (8 大于等于 8);
说 "4 小于等于 6 吗？", (4 小于等于 6);

# === 字符串操作测试 ===
说 "\n=== 字符串操作测试 ===";
my $文本 = "  你好世界  ";
说 "原始文本：'$文本'";
说 "长度：", 长度($文本);
说 "字符数：", 字符数($文本);
说 "修剪后：'", 修剪($文本), "'";
说 "大写：", 大写("hello");
说 "小写：", 小写("WORLD");
说 "首字母大写：", 首字母大写("hello world");
说 "反转：", 反转("hello");

# === 字符串操作符测试 ===
说 "\n=== 字符串操作符测试 ===";
说 "内容甲 连接 内容乙：", ('内容甲' 连接 '内容乙');
说 "字 重复字符串 5 次：", ('字' 重复字符串 5);

# === 字符串查找测试 ===
说 "\n=== 字符串查找测试 ===";
my $测试文本 = "你好世界，世界你好";
说 "包含('世界')：", 包含($测试文本, '世界');
说 "开始于('你好')：", 开始于($测试文本, '你好');
说 "结束于('你好')：", 结束于($测试文本, '你好');
说 "索引('世界')：", 索引($测试文本, '世界');
说 "替换('世界' -> '地球')：", 替换($测试文本, '世界', '地球');

# === 范围操作符测试 ===
说 "\n=== 范围操作符测试 ===";
说 "1 到 5：", (1 到 5);
说 "1 直到 5：", (1 直到 5);

# === 数组/列表测试 ===
说 "\n=== 数组/列表测试 ===";
my @数字 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
说 "原始数组：", @数字;
说 "列表大小：", 列表大小(@数字);
说 "计数：", 计数(@数字);
说 "元素数：", 元素数(@数字);
说 "第一个：", 第一个(@数字);
说 "最后一个：", 最后一个(@数字);
说 "头部(3个)：", 头部(@数字, 3);
说 "头(3个)：", 头(@数字, 3);
说 "总和：", 总和(@数字);
说 "乘积：", 乘积([1, 2, 3, 4]);
说 "平均：", 平均(@数字);
说 "中位数：", 中位数(@数字);

# === 数组操作测试 ===
说 "\n=== 数组操作测试 ===";
my @测试数组 = 复制(@数字);
说 "排序(倒序)：", 排序(@数字, {$^b <=> $^a});
说 "反向：", 反向(@数字);
说 "唯一([1,2,2,3,3,4])：", 唯一([1,2,2,3,3,4]);
说 "映射(x*2)：", 映射({$_ * 2}, @数字[0..4]);
说 "过滤(偶数)：", 过滤({$_ %% 2}, @数字);
说 "切片[2..5]：", 切片(@数字, 2, 5);

# === 集合操作测试 ===
说 "\n=== 集合操作测试 ===";
my @集合甲 = 1, 2, 3, 4;
my @集合乙 = 3, 4, 5, 6;
说 "集合甲：", @集合甲;
说 "集合乙：", @集合乙;
说 "并集：", 并集(@集合甲, @集合乙);
说 "交集：", 交集(@集合甲, @集合乙);
说 "差集：", 差集(@集合甲, @集合乙);
说 "对称差：", 对称差(@集合甲, @集合乙);

# === 逻辑函数测试 ===
说 "\n=== 逻辑函数测试 ===";
my @测试逻辑 = 2, 4, 6, 8;
说 "任何(偶数)：", 任何({$_ %% 2}, @测试逻辑);
说 "全部(偶数)：", 全部({$_ %% 2}, @测试逻辑);
说 "没有(奇数)：", 没有({$_ % 2}, @测试逻辑);

# === 随机函数测试 ===
说 "\n=== 随机函数测试 ===";
说 "随机数(0-1)：", 随机();
说 "随机整数(1-10)：", 随机整数(1, 10);
说 "随机布尔：", 随机布尔();
说 "随机选择：", 随机选择([1, 2, 3, 4, 5]);
说 "随机选(3个)：", 随机选(@数字, 3);
说 "随机一个：", 随机一个(@数字);

# === 散列测试 ===
说 "\n=== 散列测试 ===";
my %散列 = 姓名 => '张三', 年龄 => 25, 城市 => '北京';
说 "散列：", %散列;
说 "键：", 键(%散列);
说 "值：", 值(%散列);
说 "存在('姓名')：", 存在(%散列, '姓名');

# === 类型检查测试 ===
说 "\n=== 类型检查测试 ===";
说 "42 是数字吗？", 是数字(42);
说 "42 是整数吗？", 是整数(42);
说 "'你好' 是字符串吗？", 是字符串('你好');
说 "[1,2,3] 是列表吗？", 是列表([1,2,3]);
说 "%hash 是散列吗？", 是散列(%散列);
说 "真 是布尔吗？", 是布尔(真);
说 "空值 是空吗？", 是空(空());
说 "42 是真吗？", 是真(42);
说 "0 是假吗？", 是假(0);
说 "8 是偶数吗？", 是偶数(8);
说 "7 是奇数吗？", 是奇数(7);
说 "5 是正数吗？", 是正数(5);
说 "-3 是负数吗？", 是负数(-3);
说 "7 是质数吗？", 是质数(7);

# === 转换函数测试 ===
说 "\n=== 转换函数测试 ===";
说 "转数字('42')：", 转数字('42');
说 "转字符串(42)：", 转字符串(42);
说 "转列表(1..5)：", 转列表(1..5);
说 "转布尔(0)：", 转布尔(0);
说 "转布尔(1)：", 转布尔(1);
说 "转字符(65)：", 转字符(65);
说 "转代码('A')：", 转代码('A');

# === 日期时间测试 ===
说 "\n=== 日期时间测试 ===";
my $当前时间 = 时间();
说 "当前时间：", $当前时间;
说 "年：", 年($当前时间);
说 "月：", 月($当前时间);
说 "日：", 日($当前时间);
说 "小时：", 小时($当前时间);
说 "分钟：", 分钟($当前时间);
说 "秒：", 秒($当前时间);

# === 函数式编程测试 ===
说 "\n=== 函数式编程测试 ===";
my &加一 = -> $x { $x + 1 };
my &乘二 = -> $x { $x * 2 };
my &组合函数结果 = 组合函数(&乘二, &加一);
说 "组合函数(加一再乘二)(5)：", 组合函数结果(5);

my &部分加法 = 部分应用(&加, 10);
说 "部分应用(加10)(5)：", 部分加法(5);

说 "恒等函数(42)：", 恒等(42);

# === 控制流测试 ===
说 "\n=== 控制流测试 ===";

# if测试
my $结果 = 如果(
    {5 > 3},
    {"5确实大于3"},
    {"5不大于3"}
);
说 "如果测试：", $结果;

# 遍历测试
说 "对于遍历 1到5：";
对于(1..5, {说 "  数字：$_"});

# === 错误处理测试 ===
说 "\n=== 错误处理测试 ===";
my $安全结果 = 安全执行({42 / 1}, "默认值");
说 "安全执行结果：", $安全结果;

my $尝试结果 = 尝试({42}, {说 "发生错误：$_"; 0});
说 "尝试执行结果：", $尝试结果;

说 "\n" ~ "=" x 50;
说 "简体中文测试完成！";
说 "=" x 50;
